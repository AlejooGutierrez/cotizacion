{"version":3,"sources":["components/Header.jsx","helper.js","components/Form.jsx","components/Resumen.jsx","components/Resultado.jsx","components/Spiner.jsx","App.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","LetterCase","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRatio","input","Boton","button","Error","Form","setResumen","setLoading","useState","marca","year","plan","data","setData","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaValor","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spiner","Contenedor","ContenedorFormulario","App","marac","resumen","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d142f2a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst ContenedorHeader = styled.header`\r\n  background-color: #26c6da;\r\n  padding:10px;\r\n  font-weight: bold;\r\n  color: #fff;\r\n`\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`\r\n\r\n\r\nexport const Header = ({titulo}) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    )\r\n}\r\n","export function obtenerDiferenciaValor(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// Calcula el total a pagar segun la marca\r\n\r\nexport function calcularMarca(marca){\r\n    let incremento;\r\n    switch(marca){\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n//clacula tipo \r\nexport function obtenerPlan( plan ){\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\nexport function LetterCase (texto){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1)\r\n}","import React, {useState} from 'react'\r\nimport styled from '@emotion/styled'\r\nimport {calcularMarca, obtenerDiferenciaValor, obtenerPlan} from '../helper'\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n    `\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #1e1e1e;\r\n    -webkit-appearance: none;\r\n`\r\n\r\nconst InputRatio = styled.input`\r\n    margin: 0 1rem;\r\n`\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #26C6DA;\r\n    }\r\n\r\n`\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 1rem; \r\n`\r\n\r\n\r\nexport const Form = ({setResumen, setLoading}) => {\r\n\r\n    const [data, setData] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    })\r\n\r\n    const [error, guardarError] = useState(false)\r\n\r\n    const {marca, year, plan} = data\r\n\r\n\r\n    const obtenerInformacion = e => {\r\n\r\n        setData({\r\n        ...data,\r\n        [e.target.name] : e.target.value\r\n    })\r\n    }\r\n\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault()\r\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false)\r\n\r\n    let resultado = 2000;\r\n    //obtener la diferencia de años\r\n    const diferencia = obtenerDiferenciaValor(year)\r\n\r\n    //por cada año restar 3%\r\n    resultado -= ((diferencia * 3 ) * resultado) / 100;\r\n\r\n    //Americano 15%\r\n    //asiatico 5%\r\n    //Europeo 30%\r\n    resultado = calcularMarca(marca) * resultado\r\n    //Basico 20%\r\n    //completo 50%\r\n     const incrementoPlan = obtenerPlan(plan)\r\n    resultado = parseFloat( incrementoPlan * resultado).toFixed(2);\r\n\r\n    setLoading(true)\r\n\r\n    setTimeout(() =>{\r\n        setLoading(false)\r\n\r\n        setResumen({\r\n           cotizacion: resultado,\r\n           data\r\n        })\r\n        \r\n    }, 3000)\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n            {error && <Error>Todos Los Campos Son Obligatorios</Error>}\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">--- Seleccione ---</option>\r\n                    <option value=\"americano\">America</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRatio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan === 'basico'}\r\n                    onChange={obtenerInformacion}\r\n\r\n                /> Basico\r\n\r\n                <InputRatio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan === 'completo'}\r\n                    onChange={obtenerInformacion}\r\n\r\n                />Completo\r\n\r\n            </Campo>\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { LetterCase } from '../helper';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838f;\r\n    color: #fff;\r\n    margin-top: 1rem;\r\n\r\n`\r\n\r\nexport const Resumen = ({ data }) => {\r\n\r\n    const { marca, year, plan } = data;\r\n\r\n    if (marca === '' || year === '' || plan === '') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotización</h2>\r\n            <ul>\r\n                <li>Marca: {LetterCase(marca)}</li>\r\n                <li>Plan: {LetterCase(plan)}</li>\r\n                <li>Año del Auto: {LetterCase(year)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { TransitionGroup,  CSSTransition } from 'react-transition-group'\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: 1.5rem;\r\n    border: 1px solid #16C6DA;\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838f;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;   \r\n`\r\nexport const Resultado = ({cotizacion}) => {\r\n\r\n        return (\r\n        (cotizacion === 0) \r\n            ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje> \r\n            : \r\n            (\r\n                <ResultadoCotizacion>\r\n                    <TransitionGroup\r\n                        component=\"p\"\r\n                        className=\"resultado\"\r\n                    >\r\n                        <CSSTransition\r\n                            classNames=\"resultado\"\r\n                            key={cotizacion}\r\n                            timeout={{enter: 500, exit: 500 }}\r\n                        >\r\n                        <TextoCotizacion>El total es: $ {cotizacion}</TextoCotizacion>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </ResultadoCotizacion>\r\n            )\r\n        )\r\n}\r\n","import React from 'react'\r\nimport './spiner.css'\r\n\r\nexport const Spiner = () => {\r\n    return (\r\n        <div className=\"sk-cube-grid\">\r\n  <div className=\"sk-cube sk-cube1\"></div>\r\n  <div className=\"sk-cube sk-cube2\"></div>\r\n  <div className=\"sk-cube sk-cube3\"></div>\r\n  <div className=\"sk-cube sk-cube4\"></div>\r\n  <div className=\"sk-cube sk-cube5\"></div>\r\n  <div className=\"sk-cube sk-cube6\"></div>\r\n  <div className=\"sk-cube sk-cube7\"></div>\r\n  <div className=\"sk-cube sk-cube8\"></div>\r\n  <div className=\"sk-cube sk-cube9\"></div>\r\n</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport { Header } from './components/Header'\nimport styled from '@emotion/styled'\nimport { Form } from './components/Form'\nimport { Resumen } from './components/Resumen'\nimport { Resultado } from './components/Resultado'\nimport { Spiner } from './components/Spiner'\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`\n\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`\n\nfunction App() {\n\n  const [resumen, setResumen] = useState({\n    cotizacion: 0,\n    data: {\n      marac: '',\n      year: '',\n      plan: ''\n    }\n  })\n  const [loading, setLoading] = useState(false)\n\n  const { cotizacion, data } = resumen\n\n  return (\n   <Contenedor>\n    <Header titulo=\"Cotizador de Seguros\" />\n\n    <ContenedorFormulario>\n      <Form \n        setResumen={setResumen}\n        setLoading={setLoading}\n      />\n      {loading && <Spiner />  }\n\n      <Resumen \n        data={data}\n      />\n      <Resultado \n        cotizacion={cotizacion}\n      />\n    </ContenedorFormulario>\n\n   </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}